// <auto-generated />
using System;
using AYMDatingCore.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AYMDatingCore.DAL.Migrations
{
    [DbContext(typeof(AymanDatingCoreDbContext))]
    partial class AymanDatingCoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("BDataSchema")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AYMDatingCore.DAL.BaseEntity.AppRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", "ASecurity");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.BaseEntity.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ActivationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryTBLId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfJoin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateofBlockExpireIn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderTBLId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CountryTBLId");

                    b.HasIndex("GenderTBLId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", "ASecurity");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.AppErrorTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AppErrorTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.ContactUsTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ContactUsTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.CountryTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CountryTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.EducationTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EducationTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.EmailTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EmailTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.FinancialModeTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("FinancialModeTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.GenderTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GenderTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.LanguageTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LanguageTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.MaritalStatusTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MaritalStatusTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.ProfessionTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProfessionTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.PurposeTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PurposeTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserBlockTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverAppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SenderAppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("ReceiverAppUserId");

                    b.HasIndex("SenderAppUserId");

                    b.ToTable("UserBlockTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserFavoriteTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverAppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SenderAppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("ReceiverAppUserId");

                    b.HasIndex("SenderAppUserId");

                    b.ToTable("UserFavorites", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserHistoryTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AboutPartner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutYou")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EducationId")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialModeId")
                        .HasColumnType("int");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSwitchedOff")
                        .HasColumnType("bit");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ProfileHeading")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurposeId")
                        .HasColumnType("int");

                    b.Property<int?>("SearchAgeFrom")
                        .HasColumnType("int");

                    b.Property<int?>("SearchAgeTo")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CountryId");

                    b.HasIndex("EducationId");

                    b.HasIndex("FinancialModeId");

                    b.HasIndex("GenderId");

                    b.HasIndex("JobId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("PurposeId");

                    b.ToTable("UserHistoryTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserImageTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.ToTable("UserImageTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserLikeTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverAppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SenderAppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("ReceiverAppUserId");

                    b.HasIndex("SenderAppUserId");

                    b.ToTable("UserLikeTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserMessageGroupTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverAppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SenderAppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("ReceiverAppUserId");

                    b.HasIndex("SenderAppUserId");

                    b.ToTable("UserMessageGroupTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserMessageTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeletedFromReceiver")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeletedFromSender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverAppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SenderAppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("ReceiverAppUserId");

                    b.HasIndex("SenderAppUserId");

                    b.ToTable("UserMessageTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserReportTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverAppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SenderAppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("ReceiverAppUserId");

                    b.HasIndex("SenderAppUserId");

                    b.ToTable("UserReportTBLs", "BDataSchema");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserViewTBL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverAppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SenderAppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("ReceiverAppUserId");

                    b.HasIndex("SenderAppUserId");

                    b.ToTable("UserViewTBLs", "BDataSchema");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "ASecurity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "ASecurity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "ASecurity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "ASecurity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "ASecurity");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.BaseEntity.AppUser", b =>
                {
                    b.HasOne("AYMDatingCore.DAL.Entities.CountryTBL", "CountryTBL")
                        .WithMany()
                        .HasForeignKey("CountryTBLId");

                    b.HasOne("AYMDatingCore.DAL.Entities.GenderTBL", "GenderTBL")
                        .WithMany()
                        .HasForeignKey("GenderTBLId");

                    b.Navigation("CountryTBL");

                    b.Navigation("GenderTBL");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserBlockTBL", b =>
                {
                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", "ReceiverAppUser")
                        .WithMany()
                        .HasForeignKey("ReceiverAppUserId");

                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", "SenderAppUser")
                        .WithMany()
                        .HasForeignKey("SenderAppUserId");

                    b.Navigation("ReceiverAppUser");

                    b.Navigation("SenderAppUser");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserFavoriteTBL", b =>
                {
                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", "ReceiverAppUser")
                        .WithMany()
                        .HasForeignKey("ReceiverAppUserId");

                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", "SenderAppUser")
                        .WithMany()
                        .HasForeignKey("SenderAppUserId");

                    b.Navigation("ReceiverAppUser");

                    b.Navigation("SenderAppUser");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserHistoryTBL", b =>
                {
                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.HasOne("AYMDatingCore.DAL.Entities.CountryTBL", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("AYMDatingCore.DAL.Entities.EducationTBL", "Education")
                        .WithMany()
                        .HasForeignKey("EducationId");

                    b.HasOne("AYMDatingCore.DAL.Entities.FinancialModeTBL", "FinancialMode")
                        .WithMany()
                        .HasForeignKey("FinancialModeId");

                    b.HasOne("AYMDatingCore.DAL.Entities.GenderTBL", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("AYMDatingCore.DAL.Entities.ProfessionTBL", "Job")
                        .WithMany()
                        .HasForeignKey("JobId");

                    b.HasOne("AYMDatingCore.DAL.Entities.LanguageTBL", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("AYMDatingCore.DAL.Entities.MaritalStatusTBL", "MaritalStatus")
                        .WithMany()
                        .HasForeignKey("MaritalStatusId");

                    b.HasOne("AYMDatingCore.DAL.Entities.PurposeTBL", "Purpose")
                        .WithMany()
                        .HasForeignKey("PurposeId");

                    b.Navigation("AppUser");

                    b.Navigation("Country");

                    b.Navigation("Education");

                    b.Navigation("FinancialMode");

                    b.Navigation("Gender");

                    b.Navigation("Job");

                    b.Navigation("Language");

                    b.Navigation("MaritalStatus");

                    b.Navigation("Purpose");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserImageTBL", b =>
                {
                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserLikeTBL", b =>
                {
                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", "ReceiverAppUser")
                        .WithMany()
                        .HasForeignKey("ReceiverAppUserId");

                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", "SenderAppUser")
                        .WithMany()
                        .HasForeignKey("SenderAppUserId");

                    b.Navigation("ReceiverAppUser");

                    b.Navigation("SenderAppUser");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserMessageGroupTBL", b =>
                {
                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", "ReceiverAppUser")
                        .WithMany()
                        .HasForeignKey("ReceiverAppUserId");

                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", "SenderAppUser")
                        .WithMany()
                        .HasForeignKey("SenderAppUserId");

                    b.Navigation("ReceiverAppUser");

                    b.Navigation("SenderAppUser");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserMessageTBL", b =>
                {
                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", "ReceiverAppUser")
                        .WithMany()
                        .HasForeignKey("ReceiverAppUserId");

                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", "SenderAppUser")
                        .WithMany()
                        .HasForeignKey("SenderAppUserId");

                    b.Navigation("ReceiverAppUser");

                    b.Navigation("SenderAppUser");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserReportTBL", b =>
                {
                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", "ReceiverAppUser")
                        .WithMany()
                        .HasForeignKey("ReceiverAppUserId");

                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", "SenderAppUser")
                        .WithMany()
                        .HasForeignKey("SenderAppUserId");

                    b.Navigation("ReceiverAppUser");

                    b.Navigation("SenderAppUser");
                });

            modelBuilder.Entity("AYMDatingCore.DAL.Entities.UserViewTBL", b =>
                {
                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", "ReceiverAppUser")
                        .WithMany()
                        .HasForeignKey("ReceiverAppUserId");

                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", "SenderAppUser")
                        .WithMany()
                        .HasForeignKey("SenderAppUserId");

                    b.Navigation("ReceiverAppUser");

                    b.Navigation("SenderAppUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AYMDatingCore.DAL.BaseEntity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
